@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Administration/Views/Shared/_Layout.cshtml";
}
@Scripts.Render("~/Bundles/jquery.validate")
<script>
    var CategoryStatus = @ViewBag.CategoryStatus;
    var Statuses = {
        Active : @((int)DropIt.Common.Statuses.Category.Active),
        Deactive: @((int)DropIt.Common.Statuses.Category.Deactive)
        }
</script>

<div class="row-fluid">
    <div class="span8 status-filter">
        <div class="btn-group">
            <a href="@Url.Action("Index", new { CategoryStatus = (int)DropIt.Common.Statuses.Category.Deactive })" class="btn btn-large active">
                 <i class="icon-eye-close"></i>
                <span>Không hiện</span>
            </a>
            <a href="@Url.Action("Index", new { CategoryStatus = (int)DropIt.Common.Statuses.Category.Active })" class="btn btn-large">
                <i class="icon-eye-open"></i>
                <span>Hiển thị</span>
            </a>
        </div>
    </div>
    <div class="span4">
        <div class="pull-right" style="">
            <a href="@Url.Action("Create")" class="button large blue">
                <i class="icon-plus"></i>
                <span>Tạo danh mục</span>
            </a>
        </div>
    </div>
</div>

<table class="table table-bordered box">
    <thead>
        <tr>
            <th class="sortable" data-bind="click: function (data, event) { sort('CategoryName', data, category) }">Tên danh mục</th>
            <th class="sortable" data-bind="click: function (data, event) { sort('CategoryParentName', data, category) }">Tên danh mục cha</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody data-bind="foreach: data">
        <tr>
            <td data-bind="">
                <a href="" data-bind="
    text: CategoryName,
    attr: {
        href: Url({ Action: 'Edit', Data: { Id: CategoryId } }),
        title: CategoryName,
       // 'data-content':CategoryDetail
    }
                    "
                    data-toggle="popover"
                    data-trigger="hover"
                    data-html="true"></a>
            </td>
            <td><span  data-bind="text:ParentCategory==null? 'không có' :ParentCategory.CategoryName"></span></td>
            <td>
                <a href="javascript:;"
                    class="button black"
                    data-bind="click:$root.Deactive,visible:Status==Statuses.Active">Ẩn
                </a>
                <a href="javascript:;"
                    class="button green"
                    data-bind="click:$root.Active,visible:Status==Statuses.Deactive">Hiện
                </a>
                <a href="javascript:;"
                    class="button red"
                    data-bind="click:$root.Delete">Xóa
                </a>
            </td>
        </tr>
    </tbody>
</table>
<div class="pagination pull-right" data-bind="visible: pageCount() > 0">
    <ul data-bind="foreach: new Array(pageCount())">
        <li data-bind="css: {active: $index()+1 == $root.currentPage()}">
            <a href="javascript:;" data-bind="click: function (data,category) { $root.changePage($index(),data,category)}">
                <span data-bind="text: ($index()+1)"></span>
            </a>
        </li>
    </ul>
</div>
<style>
   
</style>
<script>
    
    var list = new DataList();
    list.url_getList = {Controller:"Category",Action:"List"};
    list.extraData = {
        CategoryStatus:CategoryStatus
    }
    list.changeStatus = function (stt) {
        $(".status-filter > div > a").removeClass("active");
        $(".status-filter > div > a").eq(stt).addClass("active");
        list.extraData.CategoryStatus = stt;
        list.currentPage(1);
        list.getList();
    }

    list.Active = function(item){
        list.AjaxAction({
            item:item,
            urlData:{Action:"Active",Data:{Id:item.CategoryId}},
            callback:function(event){
                Notifications.push({
                    text:"Danh mục \"#{CategoryName}\" đã được hiển thị !".eval(event),
                    autoDismiss:5
                })
            }
        })
    }
    list.Deactive = function(item){
        list.AjaxAction({
            item:item,
            urlData:{Action:"Deactive",Data:{Id:item.CategoryId}},
            callback:function(event){
                Notifications.push({
                    text:"Danh mục \"#{CategoryName}\" đã được ẩn !".eval(event),
                    autoDismiss:5
                })
            }
        })
    }
    list.Delete = function(item){
        $.fn.dialog2.helpers.confirm("Bạn có chắc là muốn xóa danh mục \""+item.CategoryName+"\" ?",
            {
                confirm:function(){
                    list.AjaxAction({
                        item:item,
                        urlData:{Action:"Delete",Data:{Id:item.CategoryId}},
                        callback:function(event){
                            Notifications.push({
                                text:"Danh mục \"#{CategoryId}\" đã được xóa !".eval(event),
                                autoDismiss:5
                            })
                        }
                    })
                }
            }
        )
    }

    list.getList = function (callback) {
        Loading(true);
        var data = { jtPageSize: list.pageSize, jtStartIndex: list.startIndex(), jtSorting: list.sorting, Category: list.CategoryStatus };
        $.extend(data, list.extraData);
        var urlData = { Action: "List", Controller: "Category", Data: data };
        $.extend(urlData, self.url_getList);
        $.ajax({
            url: Url(urlData),
            type: "POST",
            success: function (rs) {
                Loading(false);
                if (rs.Result && rs.Result == "OK") {
                    list.data.removeAll();
                    $.each(rs.Records, function (i, v) {
                        list.data.push(new Category(v));
                    })
                    list.recordCount(rs.TotalRecordCount);
                }
                setTimeout(function () {
                    bootstrap.active();
                }, 100);
                if (callback) {
                    callback.call();
                }
            }
        })
    }

    list.getList(function () {
        ko.applyBindings(list);
    });

    $(".status-filter > div > a").eq(0).attr("href","javascript:;").click(function(e){
        list.changeStatus(0);
        e.preventDefault();
        return false;
    })

    $(".status-filter > div > a").eq(1).attr("href","javascript:;").click(function(e){
        list.changeStatus(1);
        e.preventDefault();
        return false;
    })
    
    
    
</script>
