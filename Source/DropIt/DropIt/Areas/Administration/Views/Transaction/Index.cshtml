@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Administration/Views/Shared/_Layout.cshtml";
}
@Scripts.Render("~/Bundles/jquery.validate")
<script>
    var TranStatus = @ViewBag.TranStatus;
    var Statuses = {
        Delivered : @((int)DropIt.Common.Statuses.Transaction.Delivered),
        Canceled : @((int)DropIt.Common.Statuses.Transaction.Canceled),
        Paid : @((int)DropIt.Common.Statuses.Transaction.Paid),
        Recieved : @((int)DropIt.Common.Statuses.Transaction.Received),
        Unpaid : @((int)DropIt.Common.Statuses.Transaction.Unpaid)
        }
</script>
<style>
    table th:nth-child(1) {
        min-width: 200px;
    }

    table th:nth-child(2) {
        min-width: 150px;
    }

    table th:nth-child(3) {
        width: 200px;
    }

    table th:nth-child(4) {
        width: 200px;
    }

    table th:nth-child(5) {

    }
    table th:nth-child(6) {
      width:  200px;
    }

    .popover {
        max-width: 600px;
        width: auto;
    }
</style>
<div class="row-fluid">
    <div class="span8 status-filter">
        <div class="btn-group">
            <a href="@Url.Action("Index", new { TranStatus = (int)DropIt.Common.Statuses.Transaction.Unpaid })" class="btn btn-large active">
                <i class="icon-warning-sign"></i>
                <span>Chưa thanh toán</span>
            </a>
            <a href="@Url.Action("Index", new { TranStatus = (int)DropIt.Common.Statuses.Transaction.Paid })" class="btn btn-large">
                <i class="icon-ok-circle"></i>
                <span>Đã thanh toán</span>
            </a>
            <a href="@Url.Action("Index", new { TranStatus = (int)DropIt.Common.Statuses.Transaction.Delivered })" class="btn btn-large">
                <i class="icon-truck"></i>
                <span>Giao hàng</span>
            </a>

            <a href="@Url.Action("Index", new { TranStatus = (int)DropIt.Common.Statuses.Transaction.Received })" class="btn btn-large">
                <i class="icon-download-alt"></i>
                <span>Đã nhận hàng</span>
            </a>
        </div>
        <br />
        <br />
    </div>
    <div class="span4">
        @*  <div class="pull-right" style="">
            <a href="@Url.Action("Create")" class="button large blue">
                <i class="icon-plus"></i>
                <span>Tạo địa điểm</span>
            </a>
        </div>*@
    </div>
</div>


<table class="table table-bordered box">
    <thead>
        <tr>
            <th class="sortable" data-bind="click: function (data, event) { sort('TranFullName', data, event) }">Tên giao dịch</th>
            <th>Giá vé</th>
            <th>Ngày giao dịch</th>
            <th>Người mua</th>
            <th>Hình thức thanh toán</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody data-bind="foreach: data">
        <tr>
            <td data-bind="">
                <a href="" data-bind="
    text: TranFullName,
    attr: {
        href: Url({ Action: 'Edit', Data: { Id: TicketId } }),
        title: TranFullName,
        // 'data-content':VenueDetail
    }
                    "
                    data-toggle="popover"
                    data-trigger="hover"
                    data-html="true"></a>
            </td>
            <td data-bind="text: SellPrice"></td>
            <td >
                <span data-bind="text: TranShipDate.toDateTimeString()"></span>
            </td>
            <td data-bind="text: TranUser.UserName"></td>
            <td data-bind="text: TranType"></td>
            <td>
                <a href="javascript:;"
                    class="button green"
                    data-bind="click:$root.Paid,visible:TranStatus==Statuses.Unpaid"> Thanh toán
                </a>
                 <a href="javascript:;"
                    class="button red"
                    data-bind="click:$root.Canceled,visible:TranStatus==Statuses.Unpaid"> Hủy bỏ
                </a>
                <a href="javascript:;"
                    class="button blue"
                    data-bind="click:$root.Delivered,visible:TranStatus==Statuses.Paid"> Giao hàng
                </a>
                <a href="javascript:;"
                    class="button black"
                    data-bind="click:$root.Received,visible:TranStatus==Statuses.Delivered"> Nhận hàng
                </a>
            </td>
        </tr>
    </tbody>
</table>
<div class="pagination pull-right" data-bind="visible: pageCount() > 0">
    <ul data-bind="foreach: new Array(pageCount())">
        <li data-bind="css: {active: $index()+1 == $root.currentPage()}">
            <a href="javascript:;" data-bind="click: function (data,event) { $root.changePage($index(),data,event)}">
                <span data-bind="text: ($index()+1)"></span>
            </a>
        </li>
    </ul>
</div>


<style>

</style>
<script>
   
    var list = new DataList();
    list.url_getList = {Controller:"Transaction",Action:"List"};
    list.dataClass = Transaction
    list.extraData = {
        TranStatus:TranStatus
    }
    list.changeStatus = function (transtt) {
        $(".status-filter > div > a").removeClass("active");
        $(".status-filter > div > a").eq(transtt).addClass("active");
        list.extraData.TranStatus = transtt;
        list.currentPage(1);
        list.getList();
    }

    list.Unpaid = function(item){
        list.AjaxAction({
            item:item,
            urlData:{Action:"Unpaid",Data:{Id:item.TicketId}},
            callback:function(event){
                Notifications.push({
                    text:"Giao dịch \"#{TranFullName}\" đã thanh toán !".eval(event),
                    autoDismiss:5
                })
            }
        })
    }
    list.Paid = function(item){
        list.AjaxAction({
            item:item,
            urlData:{Action:"Paid",Data:{Id:item.TicketId}},
            callback:function(event){
                Notifications.push({
                    text:"Giao dịch \"#{TranFullName}\" đã thanh toán !".eval(event),
                    autoDismiss:5
                })
            }
        })
    }
    list.Delivered = function(item){
        list.AjaxAction({
            item:item,
            urlData:{Action:"Delivered",Data:{Id:item.TicketId}},
            callback:function(event){
                Notifications.push({
                    text:"Giao dịch \"#{TranFullName}\" đã giao hàng !".eval(event),
                    autoDismiss:5
                })
            }
        })
    }

    list.Received = function(item){
        list.AjaxAction({
            item:item,
            urlData:{Action:"Received",Data:{Id:item.TicketId}},
            callback:function(event){
                Notifications.push({
                    text:"Giao dịch \"#{TranFullName}\" đã nhận hàng !".eval(event),
                    autoDismiss:5
                })
            }
        })
    }
    list.Canceled = function(item){
        list.AjaxAction({
            item:item,
            urlData:{Action:"Canceled",Data:{Id:item.TicketId}},
            callback:function(event){
                Notifications.push({
                    text:"Giao dịch \"#{TranFullName}\" đã hủy bỏ !".eval(event),
                    autoDismiss:5
                })
            }
        })
    }

    list.getList = function (callback) {
        Loading(true);
        var data = { jtPageSize: list.pageSize, jtStartIndex: list.startIndex(), jtSorting: list.sorting, TranStatus: list.TranStatus };
        $.extend(data, list.extraData);
        var urlData = { Action: "List", Controller: "Transaction", Data: data };
        $.extend(urlData, self.url_getList);
        $.ajax({
            url: Url(urlData),
            type: "POST",
            success: function (rs) {
                Loading(false);
                if (rs.Result && rs.Result == "OK") {
                    list.data.removeAll();
                    $.each(rs.Records, function (i, v) {
                        list.data.push(new Transaction(v));
                    })
                    list.recordCount(rs.TotalRecordCount);
                }
                setTimeout(function () {
                    bootstrap.active();
                }, 100);
                if (callback) {
                    callback.call();
                }
            }
        })
    }

    list.getList(function () {
        ko.applyBindings(list);
    });

    $(".status-filter > div > a").eq(0).attr("href","javascript:;").click(function(e){
        list.changeStatus(0);
        e.preventDefault();
        return false;
    })

    $(".status-filter > div > a").eq(1).attr("href","javascript:;").click(function(e){
        list.changeStatus(1);
        e.preventDefault();
        return false;
    })

    $(".status-filter > div > a").eq(2).attr("href","javascript:;").click(function(e){
        list.changeStatus(2);
        e.preventDefault();
        return false;
    })

    $(".status-filter > div > a").eq(3).attr("href","javascript:;").click(function(e){
        list.changeStatus(3);
        e.preventDefault();
        return false;
    })

    $(".status-filter > div > a").eq(4).attr("href","javascript:;").click(function(e){
        list.changeStatus(4);
        e.preventDefault();
        return false;
    })
    
    
</script>
